import React, { useEffect, useState, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { Container, Row, Col, Card, Button, Table, Alert, Spinner } from 'react-bootstrap';

// 1. –Ü–ú–ü–û–†–¢–£–Ñ–ú–û –Ω–∞—à—ñ —Ü–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
import { fetchUserProfile, fetchOrdersByUserId, cancelOrder, deleteOrder } from '../api';

const OrdersPage = () => {
    const [orders, setOrders] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState('');
    const [message, setMessage] = useState('');
    const [sortBy, setSortBy] = useState('date');
    const [sortOrder, setSortOrder] = useState('desc');
    const navigate = useNavigate();

    // 2. –û–ù–û–í–õ–Æ–Ñ–ú–û —Ñ—É–Ω–∫—Ü—ñ—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å
    const fetchOrders = useCallback(async () => {
        setLoading(true);
        setError('');
        setMessage('');

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞
        if (!localStorage.getItem('token')) {
            setError('–ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.');
            setLoading(false);
            navigate('/login');
            return;
        }

        try {
            // –ö–†–û–ö 1: –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –π–æ–≥–æ ID
            const userResponse = await fetchUserProfile();
            const userId = userResponse.data.id;

            // –ö–†–û–ö 2: –ú–∞—é—á–∏ ID, –æ—Ç—Ä–∏–º—É—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            const ordersResponse = await fetchOrdersByUserId(userId);
            setOrders(ordersResponse.data);

        } catch (err) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å:", err);
            // –ì–ª–æ–±–∞–ª—å–Ω–∏–π –ø–µ—Ä–µ—Ö–æ–ø–ª—é–≤–∞—á –≤ api.js —Å–∞–º –æ–±—Ä–æ–±–∏—Ç—å –ø–æ–º–∏–ª–∫—É 401/403 (–ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∞ —Å–µ—Å—ñ—è)
            setError(err.response?.data?.message || '–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ –∞–±–æ —Å–µ—Ä–≤–µ—Ä–∞.');
        } finally {
            setLoading(false);
        }
    }, [navigate]); // navigate –¥–æ–¥–∞–Ω–æ –¥–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π

    useEffect(() => {
        fetchOrders();
    }, [fetchOrders]);

    // –§—É–Ω–∫—Ü—ñ—ó —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è - –±–µ–∑ –∑–º—ñ–Ω, –≤–æ–Ω–∏ –Ω–∞–ø–∏—Å–∞–Ω—ñ –¥–æ–±—Ä–µ
    const sortOrders = (ordersToSort) => {
        const ordersCopy = [...ordersToSort];
        // ... –≤–∞—à–∞ –ª–æ–≥—ñ–∫–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑ –∑–º—ñ–Ω ...
        if (sortBy === 'date') {
            ordersCopy.sort((a, b) => {
                const dateA = new Date(a.orderDate);
                const dateB = new Date(b.orderDate);
                return sortOrder === 'asc' ? dateA - dateB : dateB - dateA;
            });
        } else if (sortBy === 'status') {
            const statusOrder = ['PENDING', 'PROCESSING', 'PAID', 'SHIPPED', 'DELIVERED', 'CANCELLED'];
            ordersCopy.sort((a, b) => {
                const indexA = statusOrder.indexOf(a.status);
                const indexB = statusOrder.indexOf(b.status);
                const safeIndexA = indexA === -1 ? statusOrder.length : indexA;
                const safeIndexB = indexB === -1 ? statusOrder.length : indexB;
                return sortOrder === 'asc' ? safeIndexA - safeIndexB : safeIndexB - safeIndexA;
            });
        }
        return ordersCopy;
    };
    const sortedOrders = sortOrders(orders);

    // 3. –û–ù–û–í–õ–Æ–Ñ–ú–û —Ñ—É–Ω–∫—Ü—ñ—ó —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    const handleCancelOrder = useCallback(async (orderId) => {
        if (!window.confirm('–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏ —Ü–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?')) return;
        setError('');
        setMessage('');
        try {
            await cancelOrder(orderId); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
            setMessage('–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —Å–∫–∞—Å–æ–≤–∞–Ω–æ! ‚ùå');
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –º–∏—Ç—Ç—î–≤–æ–≥–æ –≤—ñ–¥–≥—É–∫—É
            setOrders(prevOrders =>
                prevOrders.map(order =>
                    order.id === orderId ? { ...order, status: 'CANCELLED' } : order
                )
            );
        } catch (err) {
            setError(err.response?.data?.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.');
        }
    }, []);

    const handleDeleteOrder = useCallback(async (orderId) => {
        if (!window.confirm('–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è? –¶—é –¥—ñ—é –Ω–µ –º–æ–∂–Ω–∞ –±—É–¥–µ —Å–∫–∞—Å—É–≤–∞—Ç–∏.')) return;
        setError('');
        setMessage('');
        try {
            await deleteOrder(orderId); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
            setMessage('–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ! üóëÔ∏è');
            setOrders(prevOrders => prevOrders.filter(order => order.id !== orderId));
        } catch (err) {
            setError(err.response?.data?.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.');
        }
    }, []);

    const handlePayOrder = (orderId, orderTotal) => {
        navigate('/payments', { state: { orderId, amount: orderTotal } });
    };

    // --- JSX-—Ä–æ–∑–º—ñ—Ç–∫–∞ –±–µ–∑ –∑–º—ñ–Ω ---
    // –í–æ–Ω–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ —á—É–¥–æ–≤–æ —ñ –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î –ø—Ä–∞–≤–æ–∫

    if (loading) {
        return (
            <Container className="d-flex justify-content-center align-items-center" style={{ minHeight: '80vh' }}>
                <div className="text-center">
                    <Spinner animation="border" role="status" className="mb-3" />
                    <p className="text-muted">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å...</p>
                </div>
            </Container>
        );
    }

    return (
        <Container fluid className="py-5 bg-light">
            <Container className="bg-white p-4 p-md-5 rounded-3 shadow-sm">
                <h1 className="text-center mb-4 text-primary fw-bold">–ú–æ—ó –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è</h1>
                {/* ... –≤–∞—à–∞ —Ä–æ–∑–º—ñ—Ç–∫–∞ –±–µ–∑ –∑–º—ñ–Ω ... */}
            </Container>
        </Container>
    );
};

export default OrdersPage;