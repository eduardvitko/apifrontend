import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useTranslation } from 'react-i18next';

// 1. –Ü–ú–ü–û–†–¢–£–Ñ–ú–û –ü–û–¢–†–Ü–ë–ù–Ü –ö–û–ú–ü–û–ù–ï–ù–¢–ò –ó REACT-BOOTSTRAP
import { Navbar as BootstrapNavbar, Nav, Container, Form, Button } from 'react-bootstrap';

const Navbar = () => {
    const { t, i18n } = useTranslation();
    const [search, setSearch] = useState('');
    const [isLoggedIn, setIsLoggedIn] = useState(false); // –°—Ç–∞–Ω –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    const navigate = useNavigate();

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ç–∞ –∑–º—ñ–Ω—ñ localStorage
    useEffect(() => {
        const token = localStorage.getItem('token');
        setIsLoggedIn(!!token); // !!token –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î —Ä—è–¥–æ–∫/null –Ω–∞ true/false

        // –î–æ–¥–∞—Ç–∫–æ–≤–æ: —Å–ª—É—Ö–∞—î–º–æ –∑–º—ñ–Ω–∏ –≤ localStorage (–∫–æ—Ä–∏—Å–Ω–æ –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ)
        const handleStorageChange = () => {
            setIsLoggedIn(!!localStorage.getItem('token'));
        };
        window.addEventListener('storage', handleStorageChange);
        return () => {
            window.removeEventListener('storage', handleStorageChange);
        };
    }, []);

    const handleSearchSubmit = (e) => {
        e.preventDefault();
        if (search.trim()) {
            navigate(`/products/search?q=${encodeURIComponent(search)}`);
            setSearch('');
        }
    };

    const handleLogout = () => {
        localStorage.removeItem('token');
        setIsLoggedIn(false);
        navigate('/login');
    };

    const changeLanguage = (lng) => {
        i18n.changeLanguage(lng);
    };

    return (
        // 2. –í–ò–ö–û–†–ò–°–¢–û–í–£–Ñ–ú–û –ê–î–ê–ü–¢–ò–í–ù–ò–ô –ö–û–ú–ü–û–ù–ï–ù–¢ NAVBAR
        // `expand="lg"` –æ–∑–Ω–∞—á–∞—î, —â–æ –º–µ–Ω—é –±—É–¥–µ —Ä–æ–∑–≥–æ—Ä–Ω—É—Ç–µ –Ω–∞ –≤–µ–ª–∏–∫–∏—Ö –µ–∫—Ä–∞–Ω–∞—Ö,
        // –∞ –Ω–∞ –º–µ–Ω—à–∏—Ö - –∑–≥–æ—Ä–Ω—É—Ç–µ –≤ "–±—É—Ä–≥–µ—Ä".
        <BootstrapNavbar bg="dark" variant="dark" expand="lg" sticky="top">
            <Container>
                //<BootstrapNavbar.Brand as={Link} to="/">{t('welcome')}</BootstrapNavbar.Brand>

                {/* 3. –ö–ù–û–ü–ö–ê "–ë–£–†–ì–ï–†", —è–∫–∞ –∑'—è–≤–ª—è—î—Ç—å—Å—è –Ω–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö */}
                <BootstrapNavbar.Toggle aria-controls="basic-navbar-nav" />

                {/* 4. –ö–û–ù–¢–ï–ô–ù–ï–†, –Ø–ö–ò–ô –ó–ì–û–†–¢–ê–Ñ–¢–¨–°–Ø */}
                <BootstrapNavbar.Collapse id="basic-navbar-nav">
                    <Nav className="me-auto">
                        {/* –ü–æ–∫–∞–∑—É—î–º–æ —Ä—ñ–∑–Ω—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–æ–≥–æ, —á–∏ —É–≤—ñ–π—à–æ–≤ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á */}
                        {isLoggedIn ? (
                            <>
                                <Nav.Link as={Link} to="/profile">{t('profile')}</Nav.Link>
                                <Nav.Link as={Link} to="/orders">{t('orders')}</Nav.Link>
                            </>
                        ) : (
                            <>
                                <Nav.Link as={Link} to="/register">{t('register')}</Nav.Link>
                                <Nav.Link as={Link} to="/login">{t('login')}</Nav.Link>
                            </>
                        )}
                        <Nav.Link as={Link} to="/categories/all">{t('categories')}</Nav.Link>
                    </Nav>

                    {/* –ü–æ—à—É–∫, –∫–æ—à–∏–∫, –º–æ–≤–∞ —Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤–∏—Ö–æ–¥—É */}
                    <Nav className="align-items-center">
                        <Form className="d-flex me-lg-3 mb-2 mb-lg-0" onSubmit={handleSearchSubmit}>
                            <Form.Control
                                type="text"
                                placeholder={t('search')}
                                value={search}
                                onChange={(e) => setSearch(e.target.value)}
                                size="sm"
                            />
                            <Button variant="outline-light" type="submit" size="sm" className="ms-2">üîç</Button>
                        </Form>

                        <Nav.Link as={Link} to="/cart" className="me-lg-3 mb-2 mb-lg-0">
                            üõí {t('cart')}
                        </Nav.Link>

                        <div className="d-flex me-lg-3 mb-2 mb-lg-0">
                            <Button
                                variant={i18n.language === 'ua' ? 'light' : 'outline-light'}
                                size="sm" className="me-1" onClick={() => changeLanguage('ua')}
                            >UA</Button>
                            <Button
                                variant={i18n.language === 'en' ? 'light' : 'outline-light'}
                                size="sm" onClick={() => changeLanguage('en')}
                            >EN</Button>
                        </div>

                        {isLoggedIn && (
                            <Button variant="outline-warning" size="sm" onClick={handleLogout}>
                                {t('logout')}
                            </Button>
                        )}
                    </Nav>
                </BootstrapNavbar.Collapse>
            </Container>
        </BootstrapNavbar>
    );
};

export default Navbar;